from matplotlib import pyplot as plt
import matplotlib.ticker as ticker
from matplotlib import rcParams,rc
from matplotlib.ticker import MultipleLocator
from matplotlib.ticker import FixedLocator,LogLocator
import numpy as np
from matplotlib.lines import Line2D

y1=[0.3872738848387901, 0.3962836607572354, 0.40984691255524897, 0.43672474691871976, 0.4621679821225488, 0.5067702616723222, 0.5602196048507903, 0.6430294665826723, 0.7014892981990062, 0.7706585005640815, 0.8096419940500594, 0.8345944835189474, 0.8651486237220667]
# last 20000
y2=[0.3785088716480721, 0.38565632340944983, 0.39384382631898174, 0.41492658443849423, 0.445859717378749, 0.4961062359263505, 0.5746436498566483, 0.6809724536704805, 0.772606943688624, 0.8332971109300683, 0.8678534607911221, 0.8880656917635633, 0.9151201805111517]
# last 20000
y3=[0.36763909029377695, 0.3718170758466915, 0.3875854366410739, 0.39478890243812753, 0.4261387886572384, 0.48899519302094185, 0.5961052198972304, 0.7412540852417452, 0.8227786241502273, 0.8785010107843586, 0.907901814865452, 0.9270904963075726, 0.9397126973434593]
# last 20000
y4=[0.3581102672797884, 0.3638649205709704, 0.3688195117232147, 0.3935965554997202, 0.42316363482973945, 0.46653028206326297, 0.605773336183246, 0.7877362389085671, 0.873225589588495, 0.9127254376069895, 0.9423846771004882, 0.9559056129485259, 0.957480873820224]

err1=[0.0022063570987358163, 0.002234105223312053, 0.0024132298504595333, 0.003923543968427093, 0.004763046291090906, 0.004693852795634883, 0.006098778317682942, 0.00635360857382019, 0.006996746614246627, 0.003957695799861783, 0.004072560729296824, 0.004224409621513308, 0.002382745744905904]
err2=[0.0022025911362034216, 0.0021585328904977536, 0.0031114939882057532, 0.0036923218553010827, 0.0045645781735737636, 0.007579503677752644, 0.009343706473462388, 0.008225386824094967, 0.006100137255700343, 0.004054892302337479, 0.0030153539967006874, 0.005248659079322158, 0.0015402472917166506]
err3=[0.002102986620042608, 0.002242720903379983, 0.0028838673359824806, 0.0034578727630447796, 0.005134353647531434, 0.008142954080744563, 0.010803674287261002, 0.011019563392298858, 0.012073831549180198, 0.004489860623601853, 0.0028163449562093766, 0.002994820693707762, 0.0024252331478455723]
err4=[0.001977928443910688, 0.002732563689536095, 0.0020114106471937937, 0.004645538772791712, 0.006211835727926516, 0.0094530388498461, 0.014969051372848282, 0.013306182158984685, 0.004701833488763921, 0.0035963168055220124, 0.0016199036695611708, 0.0013389531085011422, 0.0035634624823966763]


x11=np.linspace(16,22,num=13)

x1=[(i-18.9)*(1**(1/3))**(1/0.629971) for i in x11]
x2=[(i-18.9)*(2**(1/3))**(1/0.629971) for i in x11]
x3=[(i-18.9)*(4**(1/3))**(1/0.629971) for i in x11]
x4=[(i-18.9)*(8**(1/3))**(1/0.629971) for i in x11]
marker_list=['o','D','s','^','p']
s_list=[6.5,5.5,5.5,6.5]
x=[x1,x2,x3,x4]
y=[y1,y2,y3,y4]
err=[err1,err2,err3,err4]

labels=['$N=16000$','$N=32000$','$N=64000$','$N=128000$','$0.04$','$0.05$']

color_list=['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2','#7f7f7f', '#bcbd22', '#17becf']
# marker_list=['o','p','s','D','v','^']
# s_list=[55,75,50,50,60,60]
rcParams["font.family"] = "Times New Roman"
rcParams["font.weight"] = "bold"
rcParams["mathtext.fontset"] = 'stix'

fig,ax=plt.subplots(figsize=(7.5, 6.5))

for i in range(4):
    ax.errorbar(x[i],y[i],yerr=np.array(err[i]),linestyle='',marker=marker_list[i],mfc='w',markersize=s_list[i],linewidth=0.75,markeredgewidth=1.5,elinewidth=1.5,color=color_list[i],capsize=3)



for axis in [ 'bottom', 'left']:
    ax.spines[axis].set_linewidth(2.5)
for axis in [ 'top', 'right']:
    ax.spines[axis].set_linewidth(0)


# ax.yaxis.set_minor_locator(FixedLocator([k*10 for k in range(2,19)]))

# ax.yaxis.set_major_locator(FixedLocator([20,50,100,150]))
# ax.get_yaxis().set_major_formatter(ticker.ScalarFormatter())
# ax.set_yticks([20,50,100,150])
# ax.get_yaxis().get_major_formatter().labelOnlyBase = False

# ax.set_xlim(0.,0.645)
# ax.set_ylim(17.5,190)
# plt.gca().set_yticklabels(minor='off',labels=['','','','','','','','','','','','','','','','',''])
ax.set_xticks([-9,-6,-3,0,3,6,9])
ax.set_xlabel('$\left( \ell_0/\sigma-\ell_{\\rm c}/\sigma \\right) L^{1/\\nu}$',fontsize=30)
ax.set_ylabel('$\langle \Delta \\rho^2 \\rangle^2_L /\langle \Delta \\rho^4 \\rangle_L$',fontsize=30)
ax.tick_params(axis='both', which='major', labelsize=25)
ax.tick_params(axis='both', which='minor', width=2.5,length=3.5)
ax.tick_params(axis='both', which='major', width=2.5,length=7)
# ax.set_xticks([0.0,0.1,0.2,0.3,0.4,0.5,0.6])


# plt.legend(loc='lower left',fontsize='15',frameon=False)
# plt.savefig('hh.png',dpi=600,bbox_inches='tight')
plt.show()